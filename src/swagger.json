{
    "openapi": "3.0.0",
    "info": {
        "title": "nlwTogether documentation",
        "description": "API has the function of giving compliments ",
        "termOfService": "http://localhost:3000/terms",
        "contact": {
            "email": "daniel.brt@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "",
            "description": "API test"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "summary": "Login",
                "description": "route to login",
                "tags": [
                    "Login"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "email": "string",
                                "password": "string"
                            },
                            "examples": {
                                "login": {
                                    "value": {
                                        "email": "spider_man@gmail.com",
                                        "password": "maryjane"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Email/Password incorrect"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "token": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "summary": "Create user",
                "description": "route to creat a new user",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "examples": {
                                "user": {
                                    "value": {
                                        "name": "Spider man",
                                        "password": "maryjane",
                                        "email": "spider_man@gmail.com",
                                        "admin": "true"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "User already exists"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "List users",
                "summary": "List all users",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tags": {
            "post": {
                "summary": "Create tag",
                "description": "route to creat a new tag",
                "tags": [
                    "Tags"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tag"
                            },
                            "examples": {
                                "tag": {
                                    "value": {
                                        "name": "Amazing"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Tag already exists"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Tag"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "List tags",
                "summary": "List all tags",
                "tags": [
                    "Tags"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/compliments": {
            "post": {
                "summary": "Create compliment",
                "description": "route to creat a new compliment",
                "tags": [
                    "Compliments"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliment"
                            },
                            "examples": {
                                "compliments": {
                                    "value": {
                                        "tag_id": "d7000591-db64-47f3-9787-081c9a506d64",
                                        "user_sender": "80a41f83-0021-43dc-ae01-ae67b09ab390",
                                        "user_receiver": "1c1b8980-7d62-493c-9a90-0b418ad368c3",
                                        "message": "You are spectacular"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "User already exists"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Compliment"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "admin": {
                        "type": "boolean"
                    }
                }
            },
            "Tag": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Compliment": {
                "type": "object",
                "properties": {
                    "tag_id": {
                        "type": "uuid"
                    },
                    "user_sender": {
                        "type": "uuid"
                    },
                    "user_receiver": {
                        "type": "uuid"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}